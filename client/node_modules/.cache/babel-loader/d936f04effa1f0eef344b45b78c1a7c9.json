{"ast":null,"code":"import { getProducts } from \"../../service/index\";\nconst INITIAL_STATE = {\n  products: []\n};\n\nfunction productsReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOADPRODUCTS\":\n      {\n        return { ...state,\n          products: action.playload\n        };\n      }\n  }\n\n  return state;\n}\n\nexport default productsReducer; //Networking - MongoDB\n\nexport const fetchProducts = () => dispatch => {\n  getProducts().then(response => response.data).then(data => {\n    dispatch({\n      type: \"LOADPRODUCTS\",\n      playload: data\n    });\n    console.log(typeof data); // data is returned\n\n    console.log(data); // data is returned\n  });\n};\nexport const fetchPull = () => dispatch => {\n  getProducts().then(response => response.data).then(data => {\n    let tab = [];\n\n    for (i = 0; i < data.length; i++) {\n      if (data[i].category === \"pull\") {\n        tab.push(data[i]);\n      }\n    }\n\n    dispatch({\n      type: \"LOADPULL\",\n      playload: tab\n    });\n  });\n};","map":{"version":3,"sources":["/home/lucas/Documents/developpement/projets/mohairdesquatresaisons/client/src/redux/products/productsReducer.js"],"names":["getProducts","INITIAL_STATE","products","productsReducer","state","action","type","playload","fetchProducts","dispatch","then","response","data","console","log","fetchPull","tab","i","length","category","push"],"mappings":"AAAA,SAASA,WAAT,QAA4B,qBAA5B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE;AADU,CAAtB;;AAIA,SAASC,eAAT,GAAwD;AAAA,MAA/BC,KAA+B,uEAAvBH,aAAuB;AAAA,MAARI,MAAQ;;AACtD;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGF,KADE;AAELF,UAAAA,QAAQ,EAACG,MAAM,CAACE;AAFX,SAAP;AAID;AANH;;AASA,SAAOH,KAAP;AACD;;AACD,eAAeD,eAAf,C,CAEA;;AAEA,OAAO,MAAMK,aAAa,GAAG,MAAOC,QAAD,IAAc;AAC7CT,EAAAA,WAAW,GACRU,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAD/B,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdH,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,QAAQ,EAAEK;AAFH,KAAD,CAAR;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,IAAnB,EANc,CAMa;;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAPc,CAOK;AACpB,GAVH;AAWH,CAZM;AAeP,OAAO,MAAMG,SAAS,GAAG,MAAON,QAAD,IAAc;AAC3CT,EAAAA,WAAW,GACRU,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAD/B,EAEGF,IAFH,CAESE,IAAD,IAAU;AACd,QAAII,GAAG,GAAG,EAAV;;AACA,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGL,IAAI,CAACM,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAChC,UAAIL,IAAI,CAACK,CAAD,CAAJ,CAAQE,QAAR,KAAqB,MAAzB,EAAiC;AAC/BH,QAAAA,GAAG,CAACI,IAAJ,CAASR,IAAI,CAACK,CAAD,CAAb;AACD;AACF;;AACDR,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAE,UADC;AAEPC,MAAAA,QAAQ,EAAES;AAFH,KAAD,CAAR;AAID,GAbH;AAcD,CAfM","sourcesContent":["import { getProducts } from \"../../service/index\";\n\nconst INITIAL_STATE = {\n  products: [],\n};\n\nfunction productsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOADPRODUCTS\": {\n      return {\n        ...state,\n        products:action.playload,\n      };\n    }\n  }\n\n  return state;\n}\nexport default productsReducer;\n\n//Networking - MongoDB\n\nexport const fetchProducts = () => (dispatch) => {\n    getProducts()\n      .then((response) => response.data)\n      .then((data) => {\n        dispatch({\n          type: \"LOADPRODUCTS\",\n          playload: data,\n          \n        });\n        console.log(typeof(data)); // data is returned\n        console.log(data); // data is returned\n      });\n};\n\n\nexport const fetchPull = () => (dispatch) => {\n  getProducts()\n    .then((response) => response.data)\n    .then((data) => {\n      let tab = [];\n      for (i = 0; i < data.length; i++) {\n        if (data[i].category === \"pull\") {\n          tab.push(data[i]);\n        }\n      }\n      dispatch({\n        type: \"LOADPULL\",\n        playload: tab,\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}