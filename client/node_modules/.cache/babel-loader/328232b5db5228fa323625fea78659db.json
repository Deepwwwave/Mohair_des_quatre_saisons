{"ast":null,"code":"// import { getProducts } from \"../../service/index\";\nimport axios from \"axios\";\nconst INITIAL_STATE = {\n  products: []\n};\n\nfunction productsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOADPRODUCTS\":\n      {\n        return { ...state,\n          products: action.payload\n        };\n      }\n  }\n\n  return state;\n}\n\nexport default productsReducer; //Networking - MongoDB\n// export const fetchProducts = () => {\n//   return function (dispatch) {\n//     getProducts()\n//       .then((response) => response.data)\n//       .then((data) => {\n//         dispatch({\n//           type: \"LOADPRODUCTS\",\n//           playload: data,\n//         });\n//         console.log(typeof(data)); // data is returned\n//         console.log(data); // data is returned\n//       });\n//   };\n// };\n\nexport const fetchProducts = () => {\n  return new Promise((onSuccess, onFail) => {\n    axios.get(\"api/products\").then((response, error) => {\n      if (!response || error) {\n        return onFail(`Response failure : ${error}`);\n      }\n\n      return onSuccess(response);\n    });\n  });\n};","map":{"version":3,"sources":["/home/lucas/Documents/developpement/projets/mohairdesquatresaisons/client/src/redux/products/productsReducer.js"],"names":["axios","INITIAL_STATE","products","productsReducer","state","action","type","payload","fetchProducts","Promise","onSuccess","onFail","get","then","response","error"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE;AADU,CAAtB;;AAIA,SAASC,eAAT,CAAyBC,KAAK,GAAGH,aAAjC,EAAgDI,MAAhD,EAAwD;AACtD;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGF,KADE;AAELF,UAAAA,QAAQ,EAAEG,MAAM,CAACE;AAFZ,SAAP;AAID;AANH;;AASA,SAAOH,KAAP;AACD;;AACD,eAAeD,eAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA,OAAO,MAAMK,aAAa,GAAG,MAAM;AACjC,SAAO,IAAIC,OAAJ,CAAY,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AACxCX,IAAAA,KAAK,CACJY,GADD,CACK,cADL,EAECC,IAFD,CAEM,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACzB,UAAI,CAACD,QAAD,IAAaC,KAAjB,EAAwB;AACtB,eAAOJ,MAAM,CAAE,sBAAqBI,KAAM,EAA7B,CAAb;AACD;;AACD,aAAOL,SAAS,CAACI,QAAD,CAAhB;AACD,KAPD;AAUD,GAXM,CAAP;AAaD,CAdM","sourcesContent":["// import { getProducts } from \"../../service/index\";\nimport axios from \"axios\";\n\nconst INITIAL_STATE = {\n  products: [],\n};\n\nfunction productsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOADPRODUCTS\": {\n      return {\n        ...state,\n        products: action.payload,\n      };\n    }\n  }\n\n  return state;\n}\nexport default productsReducer;\n\n//Networking - MongoDB\n\n// export const fetchProducts = () => {\n//   return function (dispatch) {\n//     getProducts()\n//       .then((response) => response.data)\n//       .then((data) => {\n//         dispatch({\n//           type: \"LOADPRODUCTS\",\n//           playload: data,\n//         });\n//         console.log(typeof(data)); // data is returned\n//         console.log(data); // data is returned\n//       });\n//   };\n// };\n\n\n\n\n\nexport const fetchProducts = () => {\n  return new Promise((onSuccess, onFail) => {\n    axios\n    .get(\"api/products\")\n    .then((response, error) => {\n      if (!response || error) {\n        return onFail(`Response failure : ${error}`);\n      }\n      return onSuccess(response)\n    })\n    \n      \n  });\n  \n};"]},"metadata":{},"sourceType":"module"}