{"ast":null,"code":"import { getProducts } from \"../../service/index\";\nconst INITIAL_STATE = {\n  products: []\n};\n\nfunction productsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOADPRODUCTS\":\n      {\n        return { ...state,\n          products: action.playload\n        };\n      }\n  }\n\n  return state;\n}\n\nexport default productsReducer; //Networking - MongoDB\n\nexport const fetchProducts = () => dispatch => {\n  getProducts().then(response => response.data).then(data => {\n    dispatch({\n      type: \"LOADPRODUCTS\",\n      playload: data\n    });\n    console.log(data); // data is returned\n  });\n};\nexport const fetchBonnet = () => dispatch => {\n  getProducts().then(response => response.data).then(data => {\n    let tab = [];\n\n    for (i = 0; i < data.length; i++) {\n      if (data[i].category === \"Bonnet\") {\n        tab.push(data[i]);\n      }\n    }\n\n    dispatch({\n      type: \"LOADBONNET\",\n      playload: tab\n    });\n    console.log(tab);\n  });\n};\nexport const fetchTourDeCou = () => dispatch => {\n  getProducts().then(response => response.data).then(data => {\n    let tab = [];\n\n    for (i = 0; i < data.length; i++) {\n      if (data[i].category === \"Tour de Cou\") {\n        tab.push(data[i]);\n      }\n    }\n\n    dispatch({\n      type: \"LOADTOURDECOU\",\n      playload: tab\n    });\n  });\n};\nexport const fetchPull = () => dispatch => {\n  getProducts().then(response => response.data).then(data => {\n    let tab = [];\n\n    for (i = 0; i < data.length; i++) {\n      if (data[i].category === \"Pull\") {\n        tab.push(data[i]);\n      }\n    }\n\n    dispatch({\n      type: \"LOADPULL\",\n      playload: tab\n    });\n  });\n};\nexport const fetchGant = () => dispatch => {\n  getProducts().then(response => response.data).then(data => {\n    let tab = [];\n\n    for (i = 0; i < data.length; i++) {\n      if (data[i].category === \"Gant\") {\n        tab.push(data[i]);\n      }\n    }\n\n    dispatch({\n      type: \"LOADGANT\",\n      playload: tab\n    });\n  });\n};\nexport const fetchChaussette = () => dispatch => {\n  getProducts().then(response => response.data).then(data => {\n    let tab = [];\n\n    for (i = 0; i < data.length; i++) {\n      if (data[i].category === \"Chaussette\") {\n        tab.push(data[i]);\n      }\n    }\n\n    dispatch({\n      type: \"LOADCHAUSSETTE\",\n      playload: tab\n    });\n  });\n};\nexport const fetchChausson = () => dispatch => {\n  getProducts().then(response => response.data).then(data => {\n    let tab = [];\n\n    for (i = 0; i < data.length; i++) {\n      if (data[i].category === \"Chausson\") {\n        tab.push(data[i]);\n      }\n    }\n\n    dispatch({\n      type: \"LOADCHAUSSON\",\n      playload: tab\n    });\n  });\n};\nexport const fetchPlaide = () => dispatch => {\n  getProducts().then(response => response.data).then(data => {\n    let tab = [];\n\n    for (i = 0; i < data.length; i++) {\n      if (data[i].category === \"Plaide\") {\n        tab.push(data[i]);\n      }\n    }\n\n    dispatch({\n      type: \"LOADPLAIDE\",\n      playload: tab\n    });\n  });\n};\nexport const fetchPelote = () => dispatch => {\n  getProducts().then(response => response.data).then(data => {\n    let tab = [];\n\n    for (i = 0; i < data.length; i++) {\n      if (data[i].category === \"Pelote\") {\n        pull.push(data[i]);\n      }\n    }\n\n    dispatch({\n      type: \"LOADPELOTE\",\n      playload: tab\n    });\n  });\n};","map":{"version":3,"sources":["/home/lucas/Documents/developpement/projets/mohairdesquatresaisons/client/src/redux/products/productsReducer.js"],"names":["getProducts","INITIAL_STATE","products","productsReducer","state","action","type","playload","fetchProducts","dispatch","then","response","data","console","log","fetchBonnet","tab","i","length","category","push","fetchTourDeCou","fetchPull","fetchGant","fetchChaussette","fetchChausson","fetchPlaide","fetchPelote","pull"],"mappings":"AAAA,SAASA,WAAT,QAA4B,qBAA5B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE;AADU,CAAtB;;AAIA,SAASC,eAAT,CAAyBC,KAAK,GAAGH,aAAjC,EAAgDI,MAAhD,EAAwD;AACtD;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGF,KADE;AAELF,UAAAA,QAAQ,EAACG,MAAM,CAACE;AAFX,SAAP;AAID;AANH;;AAQA,SAAOH,KAAP;AACD;;AACD,eAAeD,eAAf,C,CAEA;;AAEA,OAAO,MAAMK,aAAa,GAAG,MAAOC,QAAD,IAAc;AAC7CT,EAAAA,WAAW,GACRU,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAD/B,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdH,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,QAAQ,EAAEK;AAFH,KAAD,CAAR;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EANc,CAMK;AACpB,GATH;AAUH,CAXM;AAcP,OAAO,MAAMG,WAAW,GAAG,MAAON,QAAD,IAAc;AAC7CT,EAAAA,WAAW,GACRU,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAD/B,EAEGF,IAFH,CAESE,IAAD,IAAU;AACd,QAAII,GAAG,GAAG,EAAV;;AACA,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGL,IAAI,CAACM,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAChC,UAAIL,IAAI,CAACK,CAAD,CAAJ,CAAQE,QAAR,KAAqB,QAAzB,EAAmC;AACjCH,QAAAA,GAAG,CAACI,IAAJ,CAASR,IAAI,CAACK,CAAD,CAAb;AACD;AACF;;AACDR,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAE,YADC;AAEPC,MAAAA,QAAQ,EAAES;AAFH,KAAD,CAAR;AAKAH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,GAfH;AAgBD,CAjBM;AAmBP,OAAO,MAAMK,cAAc,GAAG,MAAOZ,QAAD,IAAc;AAChDT,EAAAA,WAAW,GACRU,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAD/B,EAEGF,IAFH,CAESE,IAAD,IAAU;AACd,QAAII,GAAG,GAAG,EAAV;;AACA,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGL,IAAI,CAACM,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAChC,UAAIL,IAAI,CAACK,CAAD,CAAJ,CAAQE,QAAR,KAAqB,aAAzB,EAAwC;AACtCH,QAAAA,GAAG,CAACI,IAAJ,CAASR,IAAI,CAACK,CAAD,CAAb;AACD;AACF;;AACDR,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAE,eADC;AAEPC,MAAAA,QAAQ,EAAES;AAFH,KAAD,CAAR;AAKD,GAdH;AAeD,CAhBM;AAkBP,OAAO,MAAMM,SAAS,GAAG,MAAOb,QAAD,IAAc;AAC3CT,EAAAA,WAAW,GACRU,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAD/B,EAEGF,IAFH,CAESE,IAAD,IAAU;AACd,QAAII,GAAG,GAAG,EAAV;;AACA,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGL,IAAI,CAACM,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAChC,UAAIL,IAAI,CAACK,CAAD,CAAJ,CAAQE,QAAR,KAAqB,MAAzB,EAAiC;AAC/BH,QAAAA,GAAG,CAACI,IAAJ,CAASR,IAAI,CAACK,CAAD,CAAb;AACD;AACF;;AACDR,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAE,UADC;AAEPC,MAAAA,QAAQ,EAAES;AAFH,KAAD,CAAR;AAKD,GAdH;AAeD,CAhBM;AAmBP,OAAO,MAAMO,SAAS,GAAG,MAAOd,QAAD,IAAc;AAC3CT,EAAAA,WAAW,GACRU,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAD/B,EAEGF,IAFH,CAESE,IAAD,IAAU;AACd,QAAII,GAAG,GAAG,EAAV;;AACA,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGL,IAAI,CAACM,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAChC,UAAIL,IAAI,CAACK,CAAD,CAAJ,CAAQE,QAAR,KAAqB,MAAzB,EAAiC;AAC/BH,QAAAA,GAAG,CAACI,IAAJ,CAASR,IAAI,CAACK,CAAD,CAAb;AACD;AACF;;AACDR,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAE,UADC;AAEPC,MAAAA,QAAQ,EAAES;AAFH,KAAD,CAAR;AAKD,GAdH;AAeD,CAhBM;AAiBP,OAAO,MAAMQ,eAAe,GAAG,MAAOf,QAAD,IAAc;AACjDT,EAAAA,WAAW,GACRU,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAD/B,EAEGF,IAFH,CAESE,IAAD,IAAU;AACd,QAAII,GAAG,GAAG,EAAV;;AACA,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGL,IAAI,CAACM,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAChC,UAAIL,IAAI,CAACK,CAAD,CAAJ,CAAQE,QAAR,KAAqB,YAAzB,EAAuC;AACrCH,QAAAA,GAAG,CAACI,IAAJ,CAASR,IAAI,CAACK,CAAD,CAAb;AACD;AACF;;AACDR,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,QAAQ,EAAES;AAFH,KAAD,CAAR;AAKD,GAdH;AAeD,CAhBM;AAkBP,OAAO,MAAMS,aAAa,GAAG,MAAOhB,QAAD,IAAc;AAC/CT,EAAAA,WAAW,GACRU,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAD/B,EAEGF,IAFH,CAESE,IAAD,IAAU;AACd,QAAII,GAAG,GAAG,EAAV;;AACA,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGL,IAAI,CAACM,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAChC,UAAIL,IAAI,CAACK,CAAD,CAAJ,CAAQE,QAAR,KAAqB,UAAzB,EAAqC;AACnCH,QAAAA,GAAG,CAACI,IAAJ,CAASR,IAAI,CAACK,CAAD,CAAb;AACD;AACF;;AACDR,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,QAAQ,EAAES;AAFH,KAAD,CAAR;AAKD,GAdH;AAeD,CAhBM;AAiBP,OAAO,MAAMU,WAAW,GAAG,MAAOjB,QAAD,IAAc;AAC7CT,EAAAA,WAAW,GACRU,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAD/B,EAEGF,IAFH,CAESE,IAAD,IAAU;AACd,QAAII,GAAG,GAAG,EAAV;;AACA,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGL,IAAI,CAACM,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAChC,UAAIL,IAAI,CAACK,CAAD,CAAJ,CAAQE,QAAR,KAAqB,QAAzB,EAAmC;AACjCH,QAAAA,GAAG,CAACI,IAAJ,CAASR,IAAI,CAACK,CAAD,CAAb;AACD;AACF;;AACDR,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAE,YADC;AAEPC,MAAAA,QAAQ,EAAES;AAFH,KAAD,CAAR;AAKD,GAdH;AAeD,CAhBM;AAkBP,OAAO,MAAMW,WAAW,GAAG,MAAOlB,QAAD,IAAc;AAC7CT,EAAAA,WAAW,GACRU,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAD/B,EAEGF,IAFH,CAESE,IAAD,IAAU;AACd,QAAII,GAAG,GAAG,EAAV;;AACA,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGL,IAAI,CAACM,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAChC,UAAIL,IAAI,CAACK,CAAD,CAAJ,CAAQE,QAAR,KAAqB,QAAzB,EAAmC;AACjCS,QAAAA,IAAI,CAACR,IAAL,CAAUR,IAAI,CAACK,CAAD,CAAd;AACD;AACF;;AACDR,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAE,YADC;AAEPC,MAAAA,QAAQ,EAAES;AAFH,KAAD,CAAR;AAKD,GAdH;AAeD,CAhBM","sourcesContent":["import { getProducts } from \"../../service/index\";\n\nconst INITIAL_STATE = {\n  products: [],\n};\n\nfunction productsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOADPRODUCTS\": {\n      return {\n        ...state,\n        products:action.playload,\n      };\n    }\n  }\n  return state;\n}\nexport default productsReducer;\n\n//Networking - MongoDB\n\nexport const fetchProducts = () => (dispatch) => {\n    getProducts()\n      .then((response) => response.data)\n      .then((data) => {\n        dispatch({\n          type: \"LOADPRODUCTS\",\n          playload: data,\n          \n        });\n        console.log(data); // data is returned\n      });\n};\n\n\nexport const fetchBonnet = () => (dispatch) => {\n  getProducts()\n    .then((response) => response.data)\n    .then((data) => {\n      let tab = [];\n      for (i = 0; i < data.length; i++) {\n        if (data[i].category === \"Bonnet\") {\n          tab.push(data[i]);\n        }\n      }\n      dispatch({\n        type: \"LOADBONNET\",\n        playload: tab,\n        \n      });\n      console.log(tab)\n    });\n};\n\nexport const fetchTourDeCou = () => (dispatch) => {\n  getProducts()\n    .then((response) => response.data)\n    .then((data) => {\n      let tab = [];\n      for (i = 0; i < data.length; i++) {\n        if (data[i].category === \"Tour de Cou\") {\n          tab.push(data[i]);\n        }\n      }\n      dispatch({\n        type: \"LOADTOURDECOU\",\n        playload: tab,\n        \n      });\n    });\n};\n\nexport const fetchPull = () => (dispatch) => {\n  getProducts()\n    .then((response) => response.data)\n    .then((data) => {\n      let tab = [];\n      for (i = 0; i < data.length; i++) {\n        if (data[i].category === \"Pull\") {\n          tab.push(data[i]);\n        }\n      }\n      dispatch({\n        type: \"LOADPULL\",\n        playload: tab,\n        \n      });\n    });\n};\n\n\nexport const fetchGant = () => (dispatch) => {\n  getProducts()\n    .then((response) => response.data)\n    .then((data) => {\n      let tab = [];\n      for (i = 0; i < data.length; i++) {\n        if (data[i].category === \"Gant\") {\n          tab.push(data[i]);\n        }\n      }\n      dispatch({\n        type: \"LOADGANT\",\n        playload: tab,\n        \n      });\n    });\n};\nexport const fetchChaussette = () => (dispatch) => {\n  getProducts()\n    .then((response) => response.data)\n    .then((data) => {\n      let tab = [];\n      for (i = 0; i < data.length; i++) {\n        if (data[i].category === \"Chaussette\") {\n          tab.push(data[i]);\n        }\n      }\n      dispatch({\n        type: \"LOADCHAUSSETTE\",\n        playload: tab,\n        \n      });\n    });\n};\n\nexport const fetchChausson = () => (dispatch) => {\n  getProducts()\n    .then((response) => response.data)\n    .then((data) => {\n      let tab = [];\n      for (i = 0; i < data.length; i++) {\n        if (data[i].category === \"Chausson\") {\n          tab.push(data[i]);\n        }\n      }\n      dispatch({\n        type: \"LOADCHAUSSON\",\n        playload: tab,\n        \n      });\n    });\n};\nexport const fetchPlaide = () => (dispatch) => {\n  getProducts()\n    .then((response) => response.data)\n    .then((data) => {\n      let tab = [];\n      for (i = 0; i < data.length; i++) {\n        if (data[i].category === \"Plaide\") {\n          tab.push(data[i]);\n        }\n      }\n      dispatch({\n        type: \"LOADPLAIDE\",\n        playload: tab,\n        \n      });\n    });\n};\n\nexport const fetchPelote = () => (dispatch) => {\n  getProducts()\n    .then((response) => response.data)\n    .then((data) => {\n      let tab = [];\n      for (i = 0; i < data.length; i++) {\n        if (data[i].category === \"Pelote\") {\n          pull.push(data[i]);\n        }\n      }\n      dispatch({\n        type: \"LOADPELOTE\",\n        playload: tab,\n        \n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}