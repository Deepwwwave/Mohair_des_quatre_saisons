{"ast":null,"code":"import { getProducts } from \"../../service/index\";\nconst INITIAL_STATE = {\n  letproducts: []\n};\n\nfunction productsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOADPRODUCTS\":\n      {\n        return { ...state,\n          products: action.payload\n        };\n      }\n  }\n\n  return state;\n}\n\nexport default productsReducer; //Networking - MongoDB\n\nexport const fetchProducts = () => {\n  return function (dispatch) {\n    getProducts().then(response => response.data).then(data => {\n      dispatch({\n        type: \"LOADPRODUCTS\",\n        playload: data\n      });\n      console.log(typeof data); // data is returned\n\n      console.log(data); // data is returned\n    });\n  };\n}; // export const fetchProducts = () => {\n//   return function (dispatch) {\n//     getProducts()\n//       .then(({response}) => {\n//         dispatch({\n//           type: \"LOADPRODUCTS\",\n//           playload: response,\n//         });\n//         console.log(response); // data is returned\n//       });\n//   };\n// };","map":{"version":3,"sources":["/home/lucas/Documents/developpement/projets/mohairdesquatresaisons/client/src/redux/products/productsReducer.js"],"names":["getProducts","INITIAL_STATE","letproducts","productsReducer","state","action","type","products","payload","fetchProducts","dispatch","then","response","data","playload","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,qBAA5B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE;AADO,CAAtB;;AAIA,SAASC,eAAT,CAAyBC,KAAK,GAAGH,aAAjC,EAAgDI,MAAhD,EAAwD;AACtD;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGF,KADE;AAELG,UAAAA,QAAQ,EAAEF,MAAM,CAACG;AAFZ,SAAP;AAID;AANH;;AASA,SAAOJ,KAAP;AACD;;AACD,eAAeD,eAAf,C,CAEA;;AAEA,OAAO,MAAMM,aAAa,GAAG,MAAM;AACjC,SAAO,UAAUC,QAAV,EAAoB;AACzBV,IAAAA,WAAW,GACRW,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAD/B,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdH,MAAAA,QAAQ,CAAC;AACPJ,QAAAA,IAAI,EAAE,cADC;AAEPQ,QAAAA,QAAQ,EAAED;AAFH,OAAD,CAAR;AAIAE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOH,IAAnB,EALc,CAKa;;AAC3BE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EANc,CAMK;AACpB,KATH;AAUD,GAXD;AAYD,CAbM,C,CAiBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { getProducts } from \"../../service/index\";\n\nconst INITIAL_STATE = {\n  letproducts: [],\n};\n\nfunction productsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOADPRODUCTS\": {\n      return {\n        ...state,\n        products: action.payload,\n      };\n    }\n  }\n\n  return state;\n}\nexport default productsReducer;\n\n//Networking - MongoDB\n\nexport const fetchProducts = () => {\n  return function (dispatch) {\n    getProducts()\n      .then((response) => response.data)\n      .then((data) => {\n        dispatch({\n          type: \"LOADPRODUCTS\",\n          playload: data,\n        });\n        console.log(typeof(data)); // data is returned\n        console.log(data); // data is returned\n      });\n  };\n};\n\n\n\n// export const fetchProducts = () => {\n//   return function (dispatch) {\n//     getProducts()\n//       .then(({response}) => {\n//         dispatch({\n//           type: \"LOADPRODUCTS\",\n//           playload: response,\n//         });\n//         console.log(response); // data is returned\n//       });\n//   };\n// };"]},"metadata":{},"sourceType":"module"}