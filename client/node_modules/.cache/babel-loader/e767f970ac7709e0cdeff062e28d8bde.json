{"ast":null,"code":"import getProducts from \"../../service/index\";\nconst INITIAL_STATE = {\n  products: []\n};\n\nfunction productsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOADPRODUCTS\":\n      {\n        return { ...state,\n          products: action.payload\n        };\n      }\n  }\n\n  return state;\n}\n\nexport default productsReducer; // Networking - MongoDB\n// export const fetchProducts = () => {\n//   return async function (dispatch) {\n//     getProducts()\n//       .then((response) => response.json)\n//       .then((data) => {\n//         dispatch({\n//           type: \"LOADPRODUCTS\",\n//           playload: data,\n//         });\n//       })\n//       .then(console.log(getProducts().data));\n//   };\n// };\n\nexport const fetchProducts = () => dispatch => {\n  fetch(getProducts().response).then(response => response.json()).then(data => {\n    dispatch({\n      type: 'LOADARTICLES',\n      payload: data\n    });\n  });\n};","map":{"version":3,"sources":["/home/lucas/Documents/developpement/projets/mohairdesquatresaisons/client/src/redux/products/productsReducer.js"],"names":["getProducts","INITIAL_STATE","products","productsReducer","state","action","type","payload","fetchProducts","dispatch","fetch","response","then","json","data"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,qBAAxB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE;AADU,CAAtB;;AAIA,SAASC,eAAT,CAAyBC,KAAK,GAAGH,aAAjC,EAAgDI,MAAhD,EAAwD;AACtD;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGF,KADE;AAELF,UAAAA,QAAQ,EAAEG,MAAM,CAACE;AAFZ,SAAP;AAID;AANH;;AASA,SAAOH,KAAP;AACD;;AACD,eAAeD,eAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMK,aAAa,GAAG,MAAMC,QAAQ,IAAI;AAC7CC,EAAAA,KAAK,CAACV,WAAW,GAAGW,QAAf,CAAL,CACCC,IADD,CACMD,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EADlB,EAECD,IAFD,CAEME,IAAI,IAAI;AACZL,IAAAA,QAAQ,CAAC;AACLH,MAAAA,IAAI,EAAC,cADA;AAELC,MAAAA,OAAO,EAAEO;AAFJ,KAAD,CAAR;AAIH,GAPC;AAQD,CATM","sourcesContent":["import getProducts from \"../../service/index\";\n\nconst INITIAL_STATE = {\n  products: [],\n};\n\nfunction productsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOADPRODUCTS\": {\n      return {\n        ...state,\n        products: action.payload,\n      };\n    }\n  }\n\n  return state;\n}\nexport default productsReducer;\n\n// Networking - MongoDB\n\n// export const fetchProducts = () => {\n//   return async function (dispatch) {\n//     getProducts()\n//       .then((response) => response.json)\n//       .then((data) => {\n//         dispatch({\n//           type: \"LOADPRODUCTS\",\n//           playload: data,\n//         });\n//       })\n//       .then(console.log(getProducts().data));\n//   };\n// };\n\nexport const fetchProducts = () => dispatch => {\n  fetch(getProducts().response)\n  .then(response => response.json())\n  .then(data => {\n    dispatch({\n        type:'LOADARTICLES',\n        payload: data\n    })\n})\n}"]},"metadata":{},"sourceType":"module"}