{"ast":null,"code":"import { getProducts } from \"../../service/index\";\nconst INITIAL_STATE = {\n  products: []\n};\n\nfunction productsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOADPRODUCTS\":\n      {\n        return { ...state,\n          products: action.playload\n        };\n      }\n  }\n\n  dispatch({\n    type: \"LOADPRODUCTS\",\n    playload: data\n  });\n  return state;\n}\n\nexport default productsReducer; //Networking - MongoDB\n\nexport const fetchProducts = () => dispatch => {\n  getProducts().then(response => response.data).then(data => {\n    dispatch({\n      type: \"LOADPRODUCTS\",\n      playload: data\n    });\n    console.log(data); // data is returned\n  });\n};","map":{"version":3,"sources":["/home/lucas/Documents/developpement/projets/mohairdesquatresaisons/client/src/redux/products/productsReducer.js"],"names":["getProducts","INITIAL_STATE","products","productsReducer","state","action","type","playload","dispatch","data","fetchProducts","then","response","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,qBAA5B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE;AADU,CAAtB;;AAIA,SAASC,eAAT,CAAyBC,KAAK,GAAGH,aAAjC,EAAgDI,MAAhD,EAAwD;AACtD;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGF,KADE;AAELF,UAAAA,QAAQ,EAACG,MAAM,CAACE;AAFX,SAAP;AAID;AANH;;AASAC,EAAAA,QAAQ,CAAC;AACPF,IAAAA,IAAI,EAAE,cADC;AAEPC,IAAAA,QAAQ,EAAEE;AAFH,GAAD,CAAR;AAMA,SAAOL,KAAP;AACD;;AACD,eAAeD,eAAf,C,CAEA;;AAEA,OAAO,MAAMO,aAAa,GAAG,MAAOF,QAAD,IAAc;AAC7CR,EAAAA,WAAW,GACRW,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACH,IAD/B,EAEGE,IAFH,CAESF,IAAD,IAAU;AACdD,IAAAA,QAAQ,CAAC;AACPF,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,QAAQ,EAAEE;AAFH,KAAD,CAAR;AAKAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EANc,CAMK;AACpB,GATH;AAUH,CAXM","sourcesContent":["import { getProducts } from \"../../service/index\";\n\nconst INITIAL_STATE = {\n  products: [],\n};\n\nfunction productsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOADPRODUCTS\": {\n      return {\n        ...state,\n        products:action.playload,\n      };\n    }\n  }\n\n  dispatch({\n    type: \"LOADPRODUCTS\",\n    playload: data,\n    \n  });  \n\n  return state;\n}\nexport default productsReducer;\n\n//Networking - MongoDB\n\nexport const fetchProducts = () => (dispatch) => {\n    getProducts()\n      .then((response) => response.data)\n      .then((data) => {\n        dispatch({\n          type: \"LOADPRODUCTS\",\n          playload: data,\n          \n        });\n        console.log(data); // data is returned\n      });\n};\n\n"]},"metadata":{},"sourceType":"module"}