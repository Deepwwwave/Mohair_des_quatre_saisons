{"ast":null,"code":"import { getProducts } from \"../../service/index\";\nconst INITIAL_STATE = {\n  products: []\n};\n\nfunction productsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOAADPRODUCTS\":\n      {\n        return { ...state,\n          loading: true,\n          products: action.payload\n        };\n      }\n  }\n\n  return state;\n}\n\nexport default productsReducer; //Networking - MongoDB\n\nexport const fetchProducts = () => dispatch => {\n  fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(data => {\n    dispatch({\n      type: \"LOADPRODUCTS\",\n      playload: data\n    });\n    console.log(typeof data); // data is returned\n\n    console.log(data); // data is returned\n  });\n}; // export const fetchProducts = () => {\n//   return function (dispatch) {\n//     getProducts()\n//       .then(({response}) => {\n//         dispatch({\n//           type: \"LOADPRODUCTS\",\n//           playload: response,\n//         });\n//         console.log(response); // data is returned\n//       });\n//   };\n// };","map":{"version":3,"sources":["/home/lucas/Documents/developpement/projets/mohairdesquatresaisons/client/src/redux/products/productsReducer.js"],"names":["getProducts","INITIAL_STATE","products","productsReducer","state","action","type","loading","payload","fetchProducts","dispatch","fetch","then","response","json","data","playload","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,qBAA5B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE;AADU,CAAtB;;AAIA,SAASC,eAAT,CAAyBC,KAAK,GAAGH,aAAjC,EAAgDI,MAAhD,EAAwD;AACtD;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AAAsB;AACpB,eAAO,EACL,GAAGF,KADE;AAELG,UAAAA,OAAO,EAAE,IAFJ;AAGLL,UAAAA,QAAQ,EAAEG,MAAM,CAACG;AAHZ,SAAP;AAKD;AAPH;;AASA,SAAOJ,KAAP;AACD;;AACD,eAAeD,eAAf,C,CAEA;;AAEA,OAAO,MAAMM,aAAa,GAAG,MAAOC,QAAD,IAAc;AAC/CC,EAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACdL,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE,cADC;AAEPU,MAAAA,QAAQ,EAAED;AAFH,KAAD,CAAR;AAKAE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOH,IAAnB,EANc,CAMa;;AAC3BE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAPc,CAOK;AACpB,GAVL;AAWD,CAZM,C,CAgBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { getProducts } from \"../../service/index\";\n\nconst INITIAL_STATE = {\n  products: [],\n};\n\nfunction productsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOAADPRODUCTS\": {\n      return {\n        ...state,\n        loading: true,\n        products: action.payload,\n      };\n    }\n  }\n  return state;\n}\nexport default productsReducer;\n\n//Networking - MongoDB\n\nexport const fetchProducts = () => (dispatch) => {\n  fetch(\"https://jsonplaceholder.typicode.com/posts\")\n  .then((response) => response.json())\n      .then((data) => {\n        dispatch({\n          type: \"LOADPRODUCTS\",\n          playload: data,\n          \n        });\n        console.log(typeof(data)); // data is returned\n        console.log(data); // data is returned\n      });\n};\n\n\n\n// export const fetchProducts = () => {\n//   return function (dispatch) {\n//     getProducts()\n//       .then(({response}) => {\n//         dispatch({\n//           type: \"LOADPRODUCTS\",\n//           playload: response,\n//         });\n//         console.log(response); // data is returned\n//       });\n//   };\n// };"]},"metadata":{},"sourceType":"module"}