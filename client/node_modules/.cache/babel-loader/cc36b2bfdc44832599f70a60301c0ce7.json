{"ast":null,"code":"import { getProducts } from \"../../service/index\";\nconst INITIAL_STATE = {\n  products: []\n};\n\nfunction productsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOADPRODUCTS\":\n      {\n        return { ...state,\n          products: action.payload\n        };\n      }\n  }\n\n  console.log(state);\n  return state;\n}\n\nexport default productsReducer;\nexport const fetchProducts = () => dispatch => {\n  fetch('api/products').then(response => {\n    if (!response.ok) {\n      throw Error(response.statusText);\n    }\n\n    return response.json();\n  }).then(data => {\n    dispatch({\n      type: \"LOADARTICLES\",\n      payload: data\n    });\n    console.log(typeof data);\n    console.log(data);\n  });\n}; //Networking - MongoDB\n// export const fetchProducts = () => {\n//   return function (dispatch) {\n//     getProducts()\n//       .then((response) => response.data)\n//       .then((data) => {\n//         dispatch({\n//           type: \"LOADPRODUCTS\",\n//           playload: data,\n//         });\n//         console.log(typeof(data)); // data is returned\n//         console.log(data); // data is returned\n//       });\n//   };\n// };","map":{"version":3,"sources":["/home/lucas/Documents/developpement/projets/mohairdesquatresaisons/client/src/redux/products/productsReducer.js"],"names":["getProducts","INITIAL_STATE","products","productsReducer","state","action","type","payload","console","log","fetchProducts","dispatch","fetch","then","response","ok","Error","statusText","json","data"],"mappings":"AAAA,SAASA,WAAT,QAA4B,qBAA5B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE;AADU,CAAtB;;AAIA,SAASC,eAAT,CAAyBC,KAAK,GAAGH,aAAjC,EAAgDI,MAAhD,EAAwD;AACtD;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGF,KADE;AAELF,UAAAA,QAAQ,EAAEG,MAAM,CAACE;AAFZ,SAAP;AAID;AANH;;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,SAAOA,KAAP;AACD;;AACD,eAAeD,eAAf;AAGA,OAAO,MAAMO,aAAa,GAAG,MAAOC,QAAD,IAAc;AAC/CC,EAAAA,KAAK,CAAC,cAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAI;AAChB,QAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,YAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACD;;AACD,WAAOH,QAAQ,CAACI,IAAT,EAAP;AACD,GAND,EAOGL,IAPH,CAOSM,IAAD,IAAU;AACdR,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,OAAO,EAAEY;AAFF,KAAD,CAAR;AAIAX,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOU,IAAnB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACD,GAdH;AAeD,CAhBM,C,CAkBP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { getProducts } from \"../../service/index\";\n\nconst INITIAL_STATE = {\n  products: [],\n};\n\nfunction productsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOADPRODUCTS\": {\n      return {\n        ...state,\n        products: action.payload,\n      };\n    }\n  }\n  console.log(state)\n  return state;\n}\nexport default productsReducer;\n\n\nexport const fetchProducts = () => (dispatch) => {\n  fetch('api/products')\n  .then(response => {\n    if (!response.ok) {\n      throw Error(response.statusText);\n    }\n    return response.json();\n  })\n    .then((data) => {\n      dispatch({\n        type: \"LOADARTICLES\",\n        payload: data,\n      });\n      console.log(typeof(data))\n      console.log(data)\n    });\n};\n\n//Networking - MongoDB\n\n// export const fetchProducts = () => {\n//   return function (dispatch) {\n//     getProducts()\n//       .then((response) => response.data)\n//       .then((data) => {\n//         dispatch({\n//           type: \"LOADPRODUCTS\",\n//           playload: data,\n//         });\n//         console.log(typeof(data)); // data is returned\n//         console.log(data); // data is returned\n//       });\n//   };\n// };\n\n"]},"metadata":{},"sourceType":"module"}