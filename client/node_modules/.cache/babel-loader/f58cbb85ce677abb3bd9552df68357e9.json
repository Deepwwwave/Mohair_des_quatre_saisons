{"ast":null,"code":"import { getProducts } from \"../../service/index\";\nconst INITIAL_STATE = {\n  products: []\n};\n\nfunction produitsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOADPRODUCTS\":\n      {\n        return { ...state,\n          products: action.payload\n        };\n      }\n  }\n\n  return state;\n}\n\nexport default productsReducer; // Networking - MongoDB\n\nexport const fetchProducts = () => {\n  return async function (dispatch) {\n    getProducts().then(response => response.json()).then(data => {\n      dispatch({\n        type: 'LOADARTICLES',\n        payload: data\n      });\n    }).catch(err => dispatch(getProductsSuccess(err))).console.log(data);\n  };\n};","map":{"version":3,"sources":["/home/lucas/Documents/developpement/projets/mohairdesquatresaisons/client/src/redux/products/productsReducer.js"],"names":["getProducts","INITIAL_STATE","products","produitsReducer","state","action","type","payload","productsReducer","fetchProducts","dispatch","then","response","json","data","catch","err","getProductsSuccess","console","log"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,qBAA1B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE;AADU,CAAtB;;AAIA,SAASC,eAAT,CAAyBC,KAAK,GAAGH,aAAjC,EAAgDI,MAAhD,EAAwD;AACtD;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGF,KADE;AAELF,UAAAA,QAAQ,EAAEG,MAAM,CAACE;AAFZ,SAAP;AAID;AANH;;AASA,SAAOH,KAAP;AACD;;AACD,eAAeI,eAAf,C,CAIA;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO,gBAAgBC,QAAhB,EAA0B;AAC/BV,IAAAA,WAAW,GACVW,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZJ,MAAAA,QAAQ,CAAC;AACLJ,QAAAA,IAAI,EAAC,cADA;AAELC,QAAAA,OAAO,EAAEO;AAFJ,OAAD,CAAR;AAIH,KAPC,EAQCC,KARD,CAQOC,GAAG,IAAIN,QAAQ,CAACO,kBAAkB,CAACD,GAAD,CAAnB,CARtB,EASCE,OATD,CASSC,GATT,CASaL,IATb;AAUD,GAXD;AAYD,CAbM","sourcesContent":["import {getProducts} from \"../../service/index\"\n\nconst INITIAL_STATE = {\n  products: [],\n};\n\nfunction produitsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOADPRODUCTS\": {\n      return {\n        ...state,\n        products: action.payload,\n      };\n    }\n  }\n\n  return state;\n}\nexport default productsReducer;\n\n\n\n// Networking - MongoDB\n\nexport const fetchProducts = () => {\n  return async function (dispatch) {\n    getProducts()\n    .then(response => response.json())\n    .then(data => {\n      dispatch({\n          type:'LOADARTICLES',\n          payload: data\n      })\n  })\n    .catch(err => dispatch(getProductsSuccess(err)))\n    .console.log(data)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}