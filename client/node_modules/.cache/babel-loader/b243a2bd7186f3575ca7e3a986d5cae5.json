{"ast":null,"code":"import getProducts from \"../../service/index\";\nconst INITIAL_STATE = {\n  products: []\n};\n\nfunction productsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOADPRODUCTS\":\n      {\n        return { ...state,\n          products: action.payload\n        };\n      }\n  }\n\n  return state;\n}\n\nexport default productsReducer; // Networking - MongoDB\n\nexport const fetchProducts = () => {\n  return async function (dispatch) {\n    getProducts().then(response => response.json).then(data => {\n      dispatch({\n        type: \"LOADPRODUCTS\",\n        playload: data\n      });\n    }).then(console.log(getProducts().data));\n  };\n};","map":{"version":3,"sources":["/home/lucas/Documents/developpement/projets/mohairdesquatresaisons/client/src/redux/products/productsReducer.js"],"names":["getProducts","INITIAL_STATE","products","productsReducer","state","action","type","payload","fetchProducts","dispatch","then","response","json","data","playload","console","log"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,qBAAxB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE;AADU,CAAtB;;AAIA,SAASC,eAAT,CAAyBC,KAAK,GAAGH,aAAjC,EAAgDI,MAAhD,EAAwD;AACtD;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGF,KADE;AAELF,UAAAA,QAAQ,EAAEG,MAAM,CAACE;AAFZ,SAAP;AAID;AANH;;AASA,SAAOH,KAAP;AACD;;AACD,eAAeD,eAAf,C,CAEA;;AAEA,OAAO,MAAMK,aAAa,GAAG,MAAM;AACjC,SAAO,gBAAgBC,QAAhB,EAA0B;AAC/BT,IAAAA,WAAW,GACRU,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAD/B,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdJ,MAAAA,QAAQ,CAAC;AACPH,QAAAA,IAAI,EAAE,cADC;AAEPQ,QAAAA,QAAQ,EAAED;AAFH,OAAD,CAAR;AAID,KAPH,EAQGH,IARH,CAQQK,OAAO,CAACC,GAAR,CAAYhB,WAAW,GAAGa,IAA1B,CARR;AASD,GAVD;AAWD,CAZM","sourcesContent":["import getProducts from \"../../service/index\";\n\nconst INITIAL_STATE = {\n  products: [],\n};\n\nfunction productsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOADPRODUCTS\": {\n      return {\n        ...state,\n        products: action.payload,\n      };\n    }\n  }\n\n  return state;\n}\nexport default productsReducer;\n\n// Networking - MongoDB\n\nexport const fetchProducts = () => {\n  return async function (dispatch) {\n    getProducts()\n      .then((response) => response.json)\n      .then((data) => {\n        dispatch({\n          type: \"LOADPRODUCTS\",\n          playload: data,\n        });\n      })\n      .then(console.log(getProducts().data));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}