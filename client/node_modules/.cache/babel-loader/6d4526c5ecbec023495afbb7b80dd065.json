{"ast":null,"code":"import getProducts from \"../../service/index\";\nconst INITIAL_STATE = {\n  products: []\n};\n\nfunction productsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOADPRODUCTS\":\n      {\n        return { ...state,\n          products: action.payload\n        };\n      }\n  }\n\n  return state;\n}\n\nexport default productsReducer; // Networking - MongoDB\n\nexport const fetchProducts = () => {\n  return async function (dispatch) {\n    getProducts().then(response => response.json()).then(data => {\n      dispatch(productsReducer);\n    }).then(console.log(getProducts().data.json));\n  };\n};","map":{"version":3,"sources":["/home/lucas/Documents/developpement/projets/mohairdesquatresaisons/client/src/redux/products/productsReducer.js"],"names":["getProducts","INITIAL_STATE","products","productsReducer","state","action","type","payload","fetchProducts","dispatch","then","response","json","data","console","log"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,qBAAxB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE;AADU,CAAtB;;AAIA,SAASC,eAAT,CAAyBC,KAAK,GAAGH,aAAjC,EAAgDI,MAAhD,EAAwD;AACtD;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGF,KADE;AAELF,UAAAA,QAAQ,EAAEG,MAAM,CAACE;AAFZ,SAAP;AAID;AANH;;AASA,SAAOH,KAAP;AACD;;AACD,eAAeD,eAAf,C,CAIA;;AAEA,OAAO,MAAMK,aAAa,GAAG,MAAM;AACjC,SAAO,gBAAgBC,QAAhB,EAA0B;AAE/BT,IAAAA,WAAW,GACVU,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACdJ,MAAAA,QAAQ,CAACN,eAAD,CAAR;AACD,KAJC,EAKDO,IALC,CAKII,OAAO,CAACC,GAAR,CAAYf,WAAW,GAAGa,IAAd,CAAmBD,IAA/B,CALJ;AAMD,GARD;AASD,CAVM","sourcesContent":["import getProducts from \"../../service/index\"\n\nconst INITIAL_STATE = {\n  products: [],\n};\n\nfunction productsReducer(state = INITIAL_STATE, action) {\n  // La fonction qui est le Reducer\n  switch (action.type) {\n    case \"LOADPRODUCTS\": {\n      return {\n        ...state,\n        products: action.payload,\n      };\n    }\n  }\n\n  return state;\n}\nexport default productsReducer;\n\n\n\n// Networking - MongoDB\n\nexport const fetchProducts = () => {\n  return async function (dispatch) {\n    \n    getProducts()\n    .then(response => response.json())\n    .then(data => {\n    dispatch(productsReducer); \n  })\n  .then(console.log(getProducts().data.json))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}